{"version":3,"sources":["components/layout/NavDrawer.tsx","components/layout/Navbar.tsx","components/pages/main/button.tsx","components/pages/main/form.tsx","components/pages/main/card.tsx","components/pages/main/collapse.tsx","components/pages/main/table.tsx","components/pages/main/alert.tsx","components/pages/main/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavDrawer","props","useState","visible","setVisible","MenuOutlined","onClick","title","placement","closable","onClose","Navbar","theme","mode","Item","key","href","style","paddingLeft","float","type","ButtonComponent","span","notification","open","message","description","console","log","FormComponent","tailLayout","wrapperCol","offset","labelCol","name","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","label","rules","required","Password","TextArea","valuePropName","htmlType","Meta","Card","CardComponent","width","cover","alt","src","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","Panel","Collapse","callback","text","CollapseComponent","defaultActiveKey","onChange","header","Column","Table","ColumnGroup","data","firstName","lastName","age","address","tags","TableComponent","dataSource","dataIndex","render","map","tag","color","record","size","AlertComponent","Option","Select","Main","useThemeSwitcher","switcher","currentTheme","status","className","display","justifyContent","alignItems","placeholder","onSelect","value","newTheme","localStorage","setItem","gutter","justify","paddingTop","Footer","Layout","App","path","component","textAlign","Boolean","window","location","hostname","match","themes","dark","process","light","dracula","monokai","nord","nordLight","curTheme","getItem","document","ReactDOM","StrictMode","themeMap","defaultTheme","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.045827ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\n\nconst NavDrawer = (props: any) => {\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div>\n      <MenuOutlined onClick={showDrawer}></MenuOutlined>\n      <Drawer\n        title='title'\n        placement='right'\n        closable={false}\n        onClose={onClose}\n        visible={visible}\n      >\n        <p>Side Panel</p>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default NavDrawer;\n","import React from 'react';\nimport { Menu, Button, Avatar } from 'antd';\nimport NavDrawer from './NavDrawer';\n\nconst Navbar = () => {\n  return (\n    <Menu theme='light' mode='horizontal'>\n      <Menu.Item key='1'>\n        <a href='/'>\n          <Avatar>DR</Avatar>\n          <span style={{ paddingLeft: '12px' }}>Ant Theme Tester</span>\n        </a>\n      </Menu.Item>\n      <Menu.Item key='3' style={{ float: 'right' }}>\n        <NavDrawer></NavDrawer>\n      </Menu.Item>\n      <Menu.Item key='4' style={{ float: 'right' }}>\n        <Button type='primary'>Primary</Button>\n      </Menu.Item>\n      <Menu.Item key='2' style={{ float: 'right' }}>\n        <Button>NavButton</Button>\n      </Menu.Item>\n      <Menu.Item key='5' style={{ float: 'right' }}>\n        <Button type='text'>TextButton</Button>\n      </Menu.Item>\n      <Menu.Item key='6' style={{ float: 'right' }}>\n        <Button type='link'>Link</Button>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Button, Col, notification } from 'antd';\n\nconst ButtonComponent = (props: any) => {\n  const openNotification = () => {\n    notification.open({\n      message: 'Notification Title',\n      description:\n        'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n      onClick: () => {\n        console.log('Notification Clicked!');\n      },\n    });\n  };\n\n  return (\n    <>\n      <Col span={2}>\n        <span>Buttons:</span>\n      </Col>\n      <Col span={4}>\n        <Button type='primary' onClick={openNotification}>\n          Primary Button\n        </Button>\n      </Col>\n      <Col span={4}>\n        <Button>Default Button</Button>\n      </Col>\n      <Col span={4}>\n        <Button type='dashed'>Dashed Button</Button>\n      </Col>\n      <Col span={4}>\n        <Button type='text'>Text Button</Button>\n      </Col>\n      <Col span={4}>\n        <Button type='link'>Link Button</Button>\n      </Col>\n      <Col span={2}></Col>\n    </>\n  );\n};\n\nexport default ButtonComponent;\n","import React from 'react';\nimport { Form, Input, Button, Checkbox, DatePicker } from 'antd';\n\nconst FormComponent = (props: any) => {\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <Form\n      {...layout}\n      name='basic'\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label='Username'\n        name='username'\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label='Password'\n        name='password'\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item name={['user', 'introduction']} label='Introduction'>\n        <Input.TextArea />\n      </Form.Item>\n\n      <Form.Item label='Date'>\n        <DatePicker />\n      </Form.Item>\n\n      <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type='primary' htmlType='submit'>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FormComponent;\n","import React from 'react';\nimport { Card, Avatar } from 'antd';\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n\nconst { Meta } = Card;\n\nconst CardComponent = (props: any) => {\n  return (\n    <Card\n      style={{ width: 300 }}\n      cover={\n        <img\n          alt='example'\n          src='https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png'\n        />\n      }\n      actions={[\n        <SettingOutlined key='setting' />,\n        <EditOutlined key='edit' />,\n        <EllipsisOutlined key='ellipsis' />,\n      ]}\n    >\n      <Meta\n        avatar={\n          <Avatar src='https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png' />\n        }\n        title='Card title'\n        description='This is the description'\n      />\n    </Card>\n  );\n};\n\nexport default CardComponent;\n","import React from 'react';\nimport { Collapse } from 'antd';\n\nconst { Panel } = Collapse;\n\nfunction callback(key: any) {\n  console.log(key);\n}\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nconst CollapseComponent = (props: any) => {\n  return (\n    <Collapse defaultActiveKey={['1']} onChange={callback}>\n      <Panel header='This is panel header 1' key='1'>\n        <p>{text}</p>\n      </Panel>\n      <Panel header='This is panel header 2' key='2'>\n        <p>{text}</p>\n      </Panel>\n      <Panel header='This is panel header 3' key='3'>\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n};\n\nexport default CollapseComponent;\n","import React from 'react';\nimport { Table, Tag, Space } from 'antd';\n\nconst { Column, ColumnGroup } = Table;\n\nconst data = [\n  {\n    key: '1',\n    firstName: 'John',\n    lastName: 'Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    firstName: 'Jim',\n    lastName: 'Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    firstName: 'Joe',\n    lastName: 'Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nconst TableComponent = (props: any) => {\n  return (\n    <Table dataSource={data}>\n      <ColumnGroup title='Name'>\n        <Column title='First Name' dataIndex='firstName' key='firstName' />\n        <Column title='Last Name' dataIndex='lastName' key='lastName' />\n      </ColumnGroup>\n      <Column title='Age' dataIndex='age' key='age' />\n      <Column title='Address' dataIndex='address' key='address' />\n      <Column\n        title='Tags'\n        dataIndex='tags'\n        key='tags'\n        render={(tags) => (\n          <>\n            {tags.map((tag: any) => (\n              <Tag color='blue' key={tag}>\n                {tag}\n              </Tag>\n            ))}\n          </>\n        )}\n      />\n      <Column\n        title='Action'\n        key='action'\n        render={(text: any, record: any) => (\n          <Space size='middle'>\n            <a href='/'>Invite {record.lastName}</a>\n            <a href='/'>Delete</a>\n          </Space>\n        )}\n      />\n    </Table>\n  );\n};\n\nexport default TableComponent;\n","import React from 'react';\nimport { Alert } from 'antd';\n\nconst AlertComponent = (props: any) => {\n  return (\n    <>\n      <Alert\n        message='Success Text'\n        description='Success Description Success Description Success Description'\n        type='success'\n      />\n      <Alert\n        message='Info Text'\n        description='Info Description Info Description Info Description Info Description'\n        type='info'\n      />\n      <Alert\n        message='Warning Text'\n        description='Warning Description Warning Description Warning Description Warning Description'\n        type='warning'\n      />\n      <Alert\n        message='Error Text'\n        description='Error Description Error Description Error Description Error Description'\n        type='error'\n      />\n    </>\n  );\n};\n\nexport default AlertComponent;\n","import React from 'react';\nimport { Row, Select } from 'antd';\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\nimport ButtonComponent from './button';\nimport FormComponent from './form';\nimport CardComponent from './card';\nimport CollapseComponent from './collapse';\nimport TableComponent from './table';\nimport AlertComponent from './alert';\n\nconst { Option } = Select;\n\nconst Main = (props: any) => {\n  const { switcher, currentTheme, status } = useThemeSwitcher();\n\n  if (status === 'loading') {\n    return <div>Loading styles...</div>;\n  }\n\n  const selectTheme = (newTheme: string) => {\n    switcher({ theme: newTheme });\n    localStorage.setItem('curTheme', newTheme);\n  };\n\n  return (\n    <div className='mainContainer'>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <h2 className='center'>Current theme: {currentTheme}</h2>\n      </div>\n      <Select\n        placeholder='Change Theme'\n        size='large'\n        onSelect={(value: any) => selectTheme(value)}\n      >\n        <Option value='light'>Light</Option>\n        <Option value='dark'>Dark</Option>\n        <Option value='dracula'>Dracula</Option>\n        <Option value='monokai'>Monokai</Option>\n        <Option value='nord'>Nord</Option>\n        <Option value='nordLight'>Nord Light</Option>\n      </Select>\n      <Row\n        gutter={4}\n        justify='center'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <ButtonComponent />\n      </Row>\n      <Row\n        gutter={4}\n        justify='space-around'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <FormComponent />\n      </Row>\n      <Row\n        gutter={4}\n        justify='space-around'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <CardComponent />\n      </Row>\n      <Row\n        gutter={4}\n        justify='space-around'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <CollapseComponent />\n      </Row>\n      <Row\n        gutter={4}\n        justify='space-around'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <TableComponent />\n      </Row>\n      <Row\n        gutter={4}\n        justify='space-around'\n        style={{\n          paddingTop: '12px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <AlertComponent />\n      </Row>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.less';\nimport Navbar from './components/layout/Navbar';\nimport Main from './components/pages/main/main';\nimport { Layout } from 'antd';\nconst { Footer } = Layout;\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <header>\n          <Navbar></Navbar>\n        </header>\n        <Switch>\n          <Route path='/' component={Main} />\n        </Switch>\n        <Footer style={{ textAlign: 'center' }}>\n          Theme Previewer for AntDesign; Created by Daniel Renick\n        </Footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\n// const mapDispatchToProps = (dispatch: any) => ({\n//   loadUser: () => dispatch({ type: 'USER_LOADING' }),\n// });\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n  dracula: `${process.env.PUBLIC_URL}/dracula-theme.css`,\n  monokai: `${process.env.PUBLIC_URL}/monokai-theme.css`,\n  nord: `${process.env.PUBLIC_URL}/nord-theme.css`,\n  nordLight: `${process.env.PUBLIC_URL}/nordLight-theme.css`,\n};\n\nlet curTheme = localStorage.getItem('curTheme') || '';\nif (curTheme === '') {\n  curTheme = 'light';\n  localStorage.setItem('curTheme', curTheme);\n}\n\ndocument.title = 'Ant Theme Tester';\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={curTheme}>\n      <App />\n    </ThemeSwitcherProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}